/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface RefundsPost403Response
 */
export interface RefundsPost403Response {
    /**
     * 
     * @type {string}
     * @memberof RefundsPost403Response
     */
    errorCode?: RefundsPost403ResponseErrorCodeEnum;
    /**
     * 
     * @type {string}
     * @memberof RefundsPost403Response
     */
    message?: string;
}


/**
 * @export
 */
export const RefundsPost403ResponseErrorCodeEnum = {
    Unauthorized: 'UNAUTHORIZED'
} as const;
export type RefundsPost403ResponseErrorCodeEnum = typeof RefundsPost403ResponseErrorCodeEnum[keyof typeof RefundsPost403ResponseErrorCodeEnum];


/**
 * Check if a given object implements the RefundsPost403Response interface.
 */
export function instanceOfRefundsPost403Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RefundsPost403ResponseFromJSON(json: any): RefundsPost403Response {
    return RefundsPost403ResponseFromJSONTyped(json, false);
}

export function RefundsPost403ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefundsPost403Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errorCode': !exists(json, 'error_code') ? undefined : json['error_code'],
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function RefundsPost403ResponseToJSON(value?: RefundsPost403Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error_code': value.errorCode,
        'message': value.message,
    };
}

