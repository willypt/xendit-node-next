/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { Refund } from './Refund';
import {
    RefundFromJSON,
    RefundFromJSONTyped,
    RefundToJSON,
} from './Refund';

/**
 * 
 * @export
 * @interface RefundList
 */
export interface RefundList {
    /**
     * 
     * @type {Array<Refund>}
     * @memberof RefundList
     */
    data: Array<Refund>;
    /**
     * 
     * @type {boolean}
     * @memberof RefundList
     */
    hasMore?: boolean;
}

/**
 * Check if a given object implements the RefundList interface.
 */
export function instanceOfRefundList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function RefundListFromJSON(json: any): RefundList {
    return RefundListFromJSONTyped(json, false);
}

export function RefundListFromJSONTyped(json: any, ignoreDiscriminator: boolean): RefundList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(RefundFromJSON)),
        'hasMore': !exists(json, 'has_more') ? undefined : json['has_more'],
    };
}

export function RefundListToJSON(value?: RefundList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(RefundToJSON)),
        'has_more': value.hasMore,
    };
}

