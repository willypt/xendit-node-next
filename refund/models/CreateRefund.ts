/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface CreateRefund
 */
export interface CreateRefund {
    /**
     * 
     * @type {string}
     * @memberof CreateRefund
     */
    paymentRequestId?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateRefund
     */
    invoiceId?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateRefund
     */
    referenceId?: string;
    /**
     * 
     * @type {number}
     * @memberof CreateRefund
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof CreateRefund
     */
    currency?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateRefund
     */
    reason?: CreateRefundReasonEnum;
    /**
     * 
     * @type {object}
     * @memberof CreateRefund
     */
    metadata?: object | null;
}


/**
 * @export
 */
export const CreateRefundReasonEnum = {
    Fraudulent: 'FRAUDULENT',
    Duplicate: 'DUPLICATE',
    RequestedByCustomer: 'REQUESTED_BY_CUSTOMER',
    Cancellation: 'CANCELLATION',
    Others: 'OTHERS'
} as const;
export type CreateRefundReasonEnum = typeof CreateRefundReasonEnum[keyof typeof CreateRefundReasonEnum];


/**
 * Check if a given object implements the CreateRefund interface.
 */
export function instanceOfCreateRefund(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreateRefundFromJSON(json: any): CreateRefund {
    return CreateRefundFromJSONTyped(json, false);
}

export function CreateRefundFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateRefund {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'paymentRequestId': !exists(json, 'payment_request_id') ? undefined : json['payment_request_id'],
        'invoiceId': !exists(json, 'invoice_id') ? undefined : json['invoice_id'],
        'referenceId': !exists(json, 'reference_id') ? undefined : json['reference_id'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
    };
}

export function CreateRefundToJSON(value?: CreateRefund | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'payment_request_id': value.paymentRequestId,
        'invoice_id': value.invoiceId,
        'reference_id': value.referenceId,
        'amount': value.amount,
        'currency': value.currency,
        'reason': value.reason,
        'metadata': value.metadata,
    };
}

