/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { PublicPaymentMethod } from './PublicPaymentMethod';
import {
    PublicPaymentMethodFromJSON,
    PublicPaymentMethodFromJSONTyped,
    PublicPaymentMethodToJSON,
} from './PublicPaymentMethod';

/**
 * 
 * @export
 * @interface PublicPaymentMethodList
 */
export interface PublicPaymentMethodList {
    /**
     * 
     * @type {Array<PublicPaymentMethod>}
     * @memberof PublicPaymentMethodList
     */
    data: Array<PublicPaymentMethod>;
    /**
     * 
     * @type {boolean}
     * @memberof PublicPaymentMethodList
     */
    hasMore?: boolean;
}

/**
 * Check if a given object implements the PublicPaymentMethodList interface.
 */
export function instanceOfPublicPaymentMethodList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function PublicPaymentMethodListFromJSON(json: any): PublicPaymentMethodList {
    return PublicPaymentMethodListFromJSONTyped(json, false);
}

export function PublicPaymentMethodListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicPaymentMethodList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(PublicPaymentMethodFromJSON)),
        'hasMore': !exists(json, 'has_more') ? undefined : json['has_more'],
    };
}

export function PublicPaymentMethodListToJSON(value?: PublicPaymentMethodList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': ((value.data as Array<any>).map(PublicPaymentMethodToJSON)),
        'has_more': value.hasMore,
    };
}

