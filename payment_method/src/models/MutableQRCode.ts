/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { QRCodeChannelCode } from './QRCodeChannelCode';
import {
    QRCodeChannelCodeFromJSON,
    QRCodeChannelCodeFromJSONTyped,
    QRCodeChannelCodeToJSON,
} from './QRCodeChannelCode';
import type { QRCodeChannelProperties } from './QRCodeChannelProperties';
import {
    QRCodeChannelPropertiesFromJSON,
    QRCodeChannelPropertiesFromJSONTyped,
    QRCodeChannelPropertiesToJSON,
} from './QRCodeChannelProperties';

/**
 * 
 * @export
 * @interface MutableQRCode
 */
export interface MutableQRCode {
    /**
     * 
     * @type {number}
     * @memberof MutableQRCode
     */
    amount?: number | null;
    /**
     * 
     * @type {string}
     * @memberof MutableQRCode
     */
    currency?: string;
    /**
     * 
     * @type {QRCodeChannelCode}
     * @memberof MutableQRCode
     */
    channelCode?: QRCodeChannelCode | null;
    /**
     * 
     * @type {QRCodeChannelProperties}
     * @memberof MutableQRCode
     */
    channelProperties?: QRCodeChannelProperties | null;
}

/**
 * Check if a given object implements the MutableQRCode interface.
 */
export function instanceOfMutableQRCode(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MutableQRCodeFromJSON(json: any): MutableQRCode {
    return MutableQRCodeFromJSONTyped(json, false);
}

export function MutableQRCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MutableQRCode {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'channelCode': !exists(json, 'channel_code') ? undefined : QRCodeChannelCodeFromJSON(json['channel_code']),
        'channelProperties': !exists(json, 'channel_properties') ? undefined : QRCodeChannelPropertiesFromJSON(json['channel_properties']),
    };
}

export function MutableQRCodeToJSON(value?: MutableQRCode | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'currency': value.currency,
        'channel_code': QRCodeChannelCodeToJSON(value.channelCode),
        'channel_properties': QRCodeChannelPropertiesToJSON(value.channelProperties),
    };
}

