/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { PaymentMethodStatus } from './PaymentMethodStatus';
import {
    PaymentMethodStatusFromJSON,
    PaymentMethodStatusFromJSONTyped,
    PaymentMethodStatusToJSON,
} from './PaymentMethodStatus';

/**
 * 
 * @export
 * @interface InternalV1PatchPaymentMethod
 */
export interface InternalV1PatchPaymentMethod {
    /**
     * 
     * @type {PaymentMethodStatus}
     * @memberof InternalV1PatchPaymentMethod
     */
    status?: PaymentMethodStatus;
    /**
     * 
     * @type {object}
     * @memberof InternalV1PatchPaymentMethod
     */
    metadata?: object | null;
    /**
     * 
     * @type {Date}
     * @memberof InternalV1PatchPaymentMethod
     */
    updated?: Date;
}

/**
 * Check if a given object implements the InternalV1PatchPaymentMethod interface.
 */
export function instanceOfInternalV1PatchPaymentMethod(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InternalV1PatchPaymentMethodFromJSON(json: any): InternalV1PatchPaymentMethod {
    return InternalV1PatchPaymentMethodFromJSONTyped(json, false);
}

export function InternalV1PatchPaymentMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalV1PatchPaymentMethod {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : PaymentMethodStatusFromJSON(json['status']),
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'updated': !exists(json, 'updated') ? undefined : (new Date(json['updated'])),
    };
}

export function InternalV1PatchPaymentMethodToJSON(value?: InternalV1PatchPaymentMethod | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': PaymentMethodStatusToJSON(value.status),
        'metadata': value.metadata,
        'updated': value.updated === undefined ? undefined : (value.updated.toISOString()),
    };
}

