/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * Virtual Account Channel Properties
 * @export
 * @interface VirtualAccountChannelPropertiesPatch
 */
export interface VirtualAccountChannelPropertiesPatch {
    /**
     * The date and time in ISO 8601 UTC+0 when the virtual account number will be expired. Default: The default expiration date will be 31 years from creation date.
     * @type {Date}
     * @memberof VirtualAccountChannelPropertiesPatch
     */
    expiresAt?: Date;
    /**
     * The suggested amount you want to assign. Note: Suggested amounts is the amounts that can see as a suggestion, but user can still put any numbers (only supported for Mandiri and BRI)
     * @type {number}
     * @memberof VirtualAccountChannelPropertiesPatch
     */
    suggestedAmount?: number;
}

/**
 * Check if a given object implements the VirtualAccountChannelPropertiesPatch interface.
 */
export function instanceOfVirtualAccountChannelPropertiesPatch(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VirtualAccountChannelPropertiesPatchFromJSON(json: any): VirtualAccountChannelPropertiesPatch {
    return VirtualAccountChannelPropertiesPatchFromJSONTyped(json, false);
}

export function VirtualAccountChannelPropertiesPatchFromJSONTyped(json: any, ignoreDiscriminator: boolean): VirtualAccountChannelPropertiesPatch {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'expiresAt': !exists(json, 'expires_at') ? undefined : (new Date(json['expires_at'])),
        'suggestedAmount': !exists(json, 'suggested_amount') ? undefined : json['suggested_amount'],
    };
}

export function VirtualAccountChannelPropertiesPatchToJSON(value?: VirtualAccountChannelPropertiesPatch | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'expires_at': value.expiresAt === undefined ? undefined : (value.expiresAt.toISOString()),
        'suggested_amount': value.suggestedAmount,
    };
}

