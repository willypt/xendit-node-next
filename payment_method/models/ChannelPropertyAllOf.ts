/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * Objects that enumerate the parameters needed as `channel_properties` when creating a Payment Method
 * @export
 * @interface ChannelPropertyAllOf
 */
export interface ChannelPropertyAllOf {
    /**
     * The corresponding parameter name
     * @type {string}
     * @memberof ChannelPropertyAllOf
     */
    name?: string;
    /**
     * Data type of the parameter
     * @type {string}
     * @memberof ChannelPropertyAllOf
     */
    type?: string;
    /**
     * Indicates whether or not the parameter is required
     * @type {boolean}
     * @memberof ChannelPropertyAllOf
     */
    isRequired?: boolean;
}

/**
 * Check if a given object implements the ChannelPropertyAllOf interface.
 */
export function instanceOfChannelPropertyAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelPropertyAllOfFromJSON(json: any): ChannelPropertyAllOf {
    return ChannelPropertyAllOfFromJSONTyped(json, false);
}

export function ChannelPropertyAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelPropertyAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'isRequired': !exists(json, 'is_required') ? undefined : json['is_required'],
    };
}

export function ChannelPropertyAllOfToJSON(value?: ChannelPropertyAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': value.type,
        'is_required': value.isRequired,
    };
}

