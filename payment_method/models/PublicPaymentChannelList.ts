/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { PublicPaymentChannel } from './PublicPaymentChannel';
import {
    PublicPaymentChannelFromJSON,
    PublicPaymentChannelFromJSONTyped,
    PublicPaymentChannelToJSON,
} from './PublicPaymentChannel';
import type { PublicPaymentChannelListLinksInner } from './PublicPaymentChannelListLinksInner';
import {
    PublicPaymentChannelListLinksInnerFromJSON,
    PublicPaymentChannelListLinksInnerFromJSONTyped,
    PublicPaymentChannelListLinksInnerToJSON,
} from './PublicPaymentChannelListLinksInner';

/**
 * 
 * @export
 * @interface PublicPaymentChannelList
 */
export interface PublicPaymentChannelList {
    /**
     * Array of resources that match the provided filters
     * @type {Array<PublicPaymentChannel>}
     * @memberof PublicPaymentChannelList
     */
    data?: Array<PublicPaymentChannel>;
    /**
     * Array of objects that can be used to assist on navigating through the data
     * @type {Array<PublicPaymentChannelListLinksInner>}
     * @memberof PublicPaymentChannelList
     */
    links?: Array<PublicPaymentChannelListLinksInner>;
    /**
     * Indicates whether there are more items in the list
     * @type {boolean}
     * @memberof PublicPaymentChannelList
     */
    hasMore?: boolean;
}

/**
 * Check if a given object implements the PublicPaymentChannelList interface.
 */
export function instanceOfPublicPaymentChannelList(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PublicPaymentChannelListFromJSON(json: any): PublicPaymentChannelList {
    return PublicPaymentChannelListFromJSONTyped(json, false);
}

export function PublicPaymentChannelListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicPaymentChannelList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(PublicPaymentChannelFromJSON)),
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(PublicPaymentChannelListLinksInnerFromJSON)),
        'hasMore': !exists(json, 'has_more') ? undefined : json['has_more'],
    };
}

export function PublicPaymentChannelListToJSON(value?: PublicPaymentChannelList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(PublicPaymentChannelToJSON)),
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(PublicPaymentChannelListLinksInnerToJSON)),
        'has_more': value.hasMore,
    };
}

