/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface PublicPaymentChannelDowntimeOnlineData
 */
export interface PublicPaymentChannelDowntimeOnlineData {
    /**
     * Type of payment channel
     * @type {string}
     * @memberof PublicPaymentChannelDowntimeOnlineData
     */
    type?: string;
    /**
     * Payment channel unique code
     * @type {string}
     * @memberof PublicPaymentChannelDowntimeOnlineData
     */
    channelCode?: string;
    /**
     * Two letter country code of the payment channel
     * @type {string}
     * @memberof PublicPaymentChannelDowntimeOnlineData
     */
    country?: string;
    /**
     * Name description of the payment channel
     * @type {string}
     * @memberof PublicPaymentChannelDowntimeOnlineData
     */
    channelName?: string;
    /**
     * Payment channel downtime status code (Only available when downtime event)
     * @type {string}
     * @memberof PublicPaymentChannelDowntimeOnlineData
     */
    status?: PublicPaymentChannelDowntimeOnlineDataStatusEnum;
}


/**
 * @export
 */
export const PublicPaymentChannelDowntimeOnlineDataStatusEnum = {
    UnplannedDowntime: 'UNPLANNED_DOWNTIME',
    ScheduledMaintenance: 'SCHEDULED_MAINTENANCE',
    DegradedServices: 'DEGRADED_SERVICES',
    PartnerUnplannedDowntime: 'PARTNER_UNPLANNED_DOWNTIME',
    PartnerScheduledMaintenance: 'PARTNER_SCHEDULED_MAINTENANCE',
    PartnerDegradedServices: 'PARTNER_DEGRADED_SERVICES',
    Online: 'ONLINE'
} as const;
export type PublicPaymentChannelDowntimeOnlineDataStatusEnum = typeof PublicPaymentChannelDowntimeOnlineDataStatusEnum[keyof typeof PublicPaymentChannelDowntimeOnlineDataStatusEnum];


/**
 * Check if a given object implements the PublicPaymentChannelDowntimeOnlineData interface.
 */
export function instanceOfPublicPaymentChannelDowntimeOnlineData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PublicPaymentChannelDowntimeOnlineDataFromJSON(json: any): PublicPaymentChannelDowntimeOnlineData {
    return PublicPaymentChannelDowntimeOnlineDataFromJSONTyped(json, false);
}

export function PublicPaymentChannelDowntimeOnlineDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicPaymentChannelDowntimeOnlineData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'channelCode': !exists(json, 'channel_code') ? undefined : json['channel_code'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'channelName': !exists(json, 'channel_name') ? undefined : json['channel_name'],
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function PublicPaymentChannelDowntimeOnlineDataToJSON(value?: PublicPaymentChannelDowntimeOnlineData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'channel_code': value.channelCode,
        'country': value.country,
        'channel_name': value.channelName,
        'status': value.status,
    };
}

