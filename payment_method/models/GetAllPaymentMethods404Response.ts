/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface GetAllPaymentMethods404Response
 */
export interface GetAllPaymentMethods404Response {
    /**
     * 
     * @type {string}
     * @memberof GetAllPaymentMethods404Response
     */
    errorCode?: GetAllPaymentMethods404ResponseErrorCodeEnum;
    /**
     * 
     * @type {string}
     * @memberof GetAllPaymentMethods404Response
     */
    message?: string;
}


/**
 * @export
 */
export const GetAllPaymentMethods404ResponseErrorCodeEnum = {
    DataNotFound: 'DATA_NOT_FOUND'
} as const;
export type GetAllPaymentMethods404ResponseErrorCodeEnum = typeof GetAllPaymentMethods404ResponseErrorCodeEnum[keyof typeof GetAllPaymentMethods404ResponseErrorCodeEnum];


/**
 * Check if a given object implements the GetAllPaymentMethods404Response interface.
 */
export function instanceOfGetAllPaymentMethods404Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetAllPaymentMethods404ResponseFromJSON(json: any): GetAllPaymentMethods404Response {
    return GetAllPaymentMethods404ResponseFromJSONTyped(json, false);
}

export function GetAllPaymentMethods404ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAllPaymentMethods404Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errorCode': !exists(json, 'error_code') ? undefined : json['error_code'],
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function GetAllPaymentMethods404ResponseToJSON(value?: GetAllPaymentMethods404Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error_code': value.errorCode,
        'message': value.message,
    };
}

