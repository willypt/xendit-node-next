/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface PaymentRequestAction
 */
export interface PaymentRequestAction {
    /**
     * 
     * @type {string}
     * @memberof PaymentRequestAction
     */
    action?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentRequestAction
     */
    method?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentRequestAction
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof PaymentRequestAction
     */
    urlType?: string;
}

/**
 * Check if a given object implements the PaymentRequestAction interface.
 */
export function instanceOfPaymentRequestAction(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PaymentRequestActionFromJSON(json: any): PaymentRequestAction {
    return PaymentRequestActionFromJSONTyped(json, false);
}

export function PaymentRequestActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentRequestAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'action': !exists(json, 'action') ? undefined : json['action'],
        'method': !exists(json, 'method') ? undefined : json['method'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'urlType': !exists(json, 'url_type') ? undefined : json['url_type'],
    };
}

export function PaymentRequestActionToJSON(value?: PaymentRequestAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'action': value.action,
        'method': value.method,
        'url': value.url,
        'url_type': value.urlType,
    };
}

