/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * Virtual Account Channel Properties
 * @export
 * @interface VirtualAccountChannelProperties
 */
export interface VirtualAccountChannelProperties {
    /**
     * Name of customer.
     * @type {string}
     * @memberof VirtualAccountChannelProperties
     */
    customerName?: string;
    /**
     * You can assign specific Virtual Account number using this parameter. If you do not send one, one will be picked at random. Make sure the number you specify is within your Virtual Account range.
     * @type {string}
     * @memberof VirtualAccountChannelProperties
     */
    virtualAccountNumber?: string;
    /**
     * The date and time in ISO 8601 UTC+0 when the virtual account number will be expired. Default: The default expiration date will be 31 years from creation date.
     * @type {Date}
     * @memberof VirtualAccountChannelProperties
     */
    expiresAt?: Date;
    /**
     * The suggested amount you want to assign. Note: Suggested amounts is the amounts that can see as a suggestion, but user can still put any numbers (only supported for Mandiri and BRI)
     * @type {number}
     * @memberof VirtualAccountChannelProperties
     */
    suggestedAmount?: number;
}

/**
 * Check if a given object implements the VirtualAccountChannelProperties interface.
 */
export function instanceOfVirtualAccountChannelProperties(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VirtualAccountChannelPropertiesFromJSON(json: any): VirtualAccountChannelProperties {
    return VirtualAccountChannelPropertiesFromJSONTyped(json, false);
}

export function VirtualAccountChannelPropertiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): VirtualAccountChannelProperties {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customerName': !exists(json, 'customer_name') ? undefined : json['customer_name'],
        'virtualAccountNumber': !exists(json, 'virtual_account_number') ? undefined : json['virtual_account_number'],
        'expiresAt': !exists(json, 'expires_at') ? undefined : (new Date(json['expires_at'])),
        'suggestedAmount': !exists(json, 'suggested_amount') ? undefined : json['suggested_amount'],
    };
}

export function VirtualAccountChannelPropertiesToJSON(value?: VirtualAccountChannelProperties | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customer_name': value.customerName,
        'virtual_account_number': value.virtualAccountNumber,
        'expires_at': value.expiresAt === undefined ? undefined : (value.expiresAt.toISOString()),
        'suggested_amount': value.suggestedAmount,
    };
}

