/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { MutableCard } from './MutableCard';
import {
    MutableCardFromJSON,
    MutableCardFromJSONTyped,
    MutableCardToJSON,
} from './MutableCard';
import type { MutableCrypto } from './MutableCrypto';
import {
    MutableCryptoFromJSON,
    MutableCryptoFromJSONTyped,
    MutableCryptoToJSON,
} from './MutableCrypto';
import type { MutableDirectBankTransfer } from './MutableDirectBankTransfer';
import {
    MutableDirectBankTransferFromJSON,
    MutableDirectBankTransferFromJSONTyped,
    MutableDirectBankTransferToJSON,
} from './MutableDirectBankTransfer';
import type { MutableDirectDebit } from './MutableDirectDebit';
import {
    MutableDirectDebitFromJSON,
    MutableDirectDebitFromJSONTyped,
    MutableDirectDebitToJSON,
} from './MutableDirectDebit';
import type { MutableEwallet } from './MutableEwallet';
import {
    MutableEwalletFromJSON,
    MutableEwalletFromJSONTyped,
    MutableEwalletToJSON,
} from './MutableEwallet';
import type { MutableOverTheCounter } from './MutableOverTheCounter';
import {
    MutableOverTheCounterFromJSON,
    MutableOverTheCounterFromJSONTyped,
    MutableOverTheCounterToJSON,
} from './MutableOverTheCounter';
import type { MutableQRCode } from './MutableQRCode';
import {
    MutableQRCodeFromJSON,
    MutableQRCodeFromJSONTyped,
    MutableQRCodeToJSON,
} from './MutableQRCode';
import type { MutableVirtualAccount } from './MutableVirtualAccount';
import {
    MutableVirtualAccountFromJSON,
    MutableVirtualAccountFromJSONTyped,
    MutableVirtualAccountToJSON,
} from './MutableVirtualAccount';
import type { PaymentMethodReusability } from './PaymentMethodReusability';
import {
    PaymentMethodReusabilityFromJSON,
    PaymentMethodReusabilityFromJSONTyped,
    PaymentMethodReusabilityToJSON,
} from './PaymentMethodReusability';
import type { PaymentMethodType } from './PaymentMethodType';
import {
    PaymentMethodTypeFromJSON,
    PaymentMethodTypeFromJSONTyped,
    PaymentMethodTypeToJSON,
} from './PaymentMethodType';

/**
 * 
 * @export
 * @interface PaymentMethod
 */
export interface PaymentMethod {
    /**
     * 
     * @type {PaymentMethodType}
     * @memberof PaymentMethod
     */
    type: PaymentMethodType;
    /**
     * 
     * @type {PaymentMethodReusability}
     * @memberof PaymentMethod
     */
    reusability: PaymentMethodReusability;
    /**
     * 
     * @type {string}
     * @memberof PaymentMethod
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaymentMethod
     */
    referenceId?: string;
    /**
     * 
     * @type {MutableCard}
     * @memberof PaymentMethod
     */
    card?: MutableCard | null;
    /**
     * 
     * @type {MutableCrypto}
     * @memberof PaymentMethod
     */
    cryptocurrency?: MutableCrypto | null;
    /**
     * 
     * @type {MutableDirectBankTransfer}
     * @memberof PaymentMethod
     */
    directBankTransfer?: MutableDirectBankTransfer | null;
    /**
     * 
     * @type {MutableDirectDebit}
     * @memberof PaymentMethod
     */
    directDebit?: MutableDirectDebit | null;
    /**
     * 
     * @type {MutableEwallet}
     * @memberof PaymentMethod
     */
    ewallet?: MutableEwallet | null;
    /**
     * 
     * @type {MutableOverTheCounter}
     * @memberof PaymentMethod
     */
    overTheCounter?: MutableOverTheCounter | null;
    /**
     * 
     * @type {MutableVirtualAccount}
     * @memberof PaymentMethod
     */
    virtualAccount?: MutableVirtualAccount | null;
    /**
     * 
     * @type {MutableQRCode}
     * @memberof PaymentMethod
     */
    qrCode?: MutableQRCode | null;
}

/**
 * Check if a given object implements the PaymentMethod interface.
 */
export function instanceOfPaymentMethod(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "reusability" in value;

    return isInstance;
}

export function PaymentMethodFromJSON(json: any): PaymentMethod {
    return PaymentMethodFromJSONTyped(json, false);
}

export function PaymentMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentMethod {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': PaymentMethodTypeFromJSON(json['type']),
        'reusability': PaymentMethodReusabilityFromJSON(json['reusability']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'referenceId': !exists(json, 'reference_id') ? undefined : json['reference_id'],
        'card': !exists(json, 'card') ? undefined : MutableCardFromJSON(json['card']),
        'cryptocurrency': !exists(json, 'cryptocurrency') ? undefined : MutableCryptoFromJSON(json['cryptocurrency']),
        'directBankTransfer': !exists(json, 'direct_bank_transfer') ? undefined : MutableDirectBankTransferFromJSON(json['direct_bank_transfer']),
        'directDebit': !exists(json, 'direct_debit') ? undefined : MutableDirectDebitFromJSON(json['direct_debit']),
        'ewallet': !exists(json, 'ewallet') ? undefined : MutableEwalletFromJSON(json['ewallet']),
        'overTheCounter': !exists(json, 'over_the_counter') ? undefined : MutableOverTheCounterFromJSON(json['over_the_counter']),
        'virtualAccount': !exists(json, 'virtual_account') ? undefined : MutableVirtualAccountFromJSON(json['virtual_account']),
        'qrCode': !exists(json, 'qr_code') ? undefined : MutableQRCodeFromJSON(json['qr_code']),
    };
}

export function PaymentMethodToJSON(value?: PaymentMethod | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': PaymentMethodTypeToJSON(value.type),
        'reusability': PaymentMethodReusabilityToJSON(value.reusability),
        'description': value.description,
        'reference_id': value.referenceId,
        'card': MutableCardToJSON(value.card),
        'cryptocurrency': MutableCryptoToJSON(value.cryptocurrency),
        'direct_bank_transfer': MutableDirectBankTransferToJSON(value.directBankTransfer),
        'direct_debit': MutableDirectDebitToJSON(value.directDebit),
        'ewallet': MutableEwalletToJSON(value.ewallet),
        'over_the_counter': MutableOverTheCounterToJSON(value.overTheCounter),
        'virtual_account': MutableVirtualAccountToJSON(value.virtualAccount),
        'qr_code': MutableQRCodeToJSON(value.qrCode),
    };
}

