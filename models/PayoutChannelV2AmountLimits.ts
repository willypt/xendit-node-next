/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * 
 * @export
 * @interface PayoutChannelV2AmountLimits
 */
export interface PayoutChannelV2AmountLimits {
    /**
     * 
     * @type {number}
     * @memberof PayoutChannelV2AmountLimits
     */
    minimum: number;
    /**
     * 
     * @type {number}
     * @memberof PayoutChannelV2AmountLimits
     */
    maximum: number;
    /**
     * 
     * @type {number}
     * @memberof PayoutChannelV2AmountLimits
     */
    minimumIncrement: number;
}

/**
 * Check if a given object implements the PayoutChannelV2AmountLimits interface.
 */
export function instanceOfPayoutChannelV2AmountLimits(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "minimum" in value;
    isInstance = isInstance && "maximum" in value;
    isInstance = isInstance && "minimumIncrement" in value;

    return isInstance;
}

export function PayoutChannelV2AmountLimitsFromJSON(json: any): PayoutChannelV2AmountLimits {
    return PayoutChannelV2AmountLimitsFromJSONTyped(json, false);
}

export function PayoutChannelV2AmountLimitsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PayoutChannelV2AmountLimits {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'minimum': json['minimum'],
        'maximum': json['maximum'],
        'minimumIncrement': json['minimum_increment'],
    };
}

export function PayoutChannelV2AmountLimitsToJSON(value?: PayoutChannelV2AmountLimits | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'minimum': value.minimum,
        'maximum': value.maximum,
        'minimum_increment': value.minimumIncrement,
    };
}

