/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
/**
 * Additional notification for completed payout
 * @export
 * @interface ReceiptNotification
 */
export interface ReceiptNotification {
    /**
     * 
     * @type {Array<string>}
     * @memberof ReceiptNotification
     */
    emailTo?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ReceiptNotification
     */
    emailCc?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ReceiptNotification
     */
    emailBcc?: Array<string> | null;
}

/**
 * Check if a given object implements the ReceiptNotification interface.
 */
export function instanceOfReceiptNotification(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReceiptNotificationFromJSON(json: any): ReceiptNotification {
    return ReceiptNotificationFromJSONTyped(json, false);
}

export function ReceiptNotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReceiptNotification {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'emailTo': !exists(json, 'email_to') ? undefined : json['email_to'],
        'emailCc': !exists(json, 'email_cc') ? undefined : json['email_cc'],
        'emailBcc': !exists(json, 'email_bcc') ? undefined : json['email_bcc'],
    };
}

export function ReceiptNotificationToJSON(value?: ReceiptNotification | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email_to': value.emailTo,
        'email_cc': value.emailCc,
        'email_bcc': value.emailBcc,
    };
}

