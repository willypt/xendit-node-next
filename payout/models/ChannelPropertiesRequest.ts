/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { DigitalPayoutChannelProperties } from './DigitalPayoutChannelProperties';
import {
    DigitalPayoutChannelPropertiesFromJSON,
    DigitalPayoutChannelPropertiesFromJSONTyped,
    DigitalPayoutChannelPropertiesToJSON,
} from './DigitalPayoutChannelProperties';
import type { OTCPayoutChannelPropertiesRequest } from './OTCPayoutChannelPropertiesRequest';
import {
    OTCPayoutChannelPropertiesRequestFromJSON,
    OTCPayoutChannelPropertiesRequestFromJSONTyped,
    OTCPayoutChannelPropertiesRequestToJSON,
} from './OTCPayoutChannelPropertiesRequest';
import type { PayoutChannelV2AccountType } from './PayoutChannelV2AccountType';
import {
    PayoutChannelV2AccountTypeFromJSON,
    PayoutChannelV2AccountTypeFromJSONTyped,
    PayoutChannelV2AccountTypeToJSON,
} from './PayoutChannelV2AccountType';

/**
 * 
 * @export
 * @interface ChannelPropertiesRequest
 */
export interface ChannelPropertiesRequest {
    /**
     * 
     * @type {string}
     * @memberof ChannelPropertiesRequest
     */
    accountHolderName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ChannelPropertiesRequest
     */
    accountNumber: string;
    /**
     * 
     * @type {PayoutChannelV2AccountType}
     * @memberof ChannelPropertiesRequest
     */
    accountType?: PayoutChannelV2AccountType;
    /**
     * 
     * @type {string}
     * @memberof ChannelPropertiesRequest
     */
    recipientGivenNames: string;
    /**
     * 
     * @type {string}
     * @memberof ChannelPropertiesRequest
     */
    recipientSurname?: string;
    /**
     * 
     * @type {Date}
     * @memberof ChannelPropertiesRequest
     */
    expiresAt?: Date;
}

/**
 * Check if a given object implements the ChannelPropertiesRequest interface.
 */
export function instanceOfChannelPropertiesRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accountNumber" in value;
    isInstance = isInstance && "recipientGivenNames" in value;

    return isInstance;
}

export function ChannelPropertiesRequestFromJSON(json: any): ChannelPropertiesRequest {
    return ChannelPropertiesRequestFromJSONTyped(json, false);
}

export function ChannelPropertiesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelPropertiesRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountHolderName': !exists(json, 'account_holder_name') ? undefined : json['account_holder_name'],
        'accountNumber': json['account_number'],
        'accountType': !exists(json, 'account_type') ? undefined : PayoutChannelV2AccountTypeFromJSON(json['account_type']),
        'recipientGivenNames': json['recipient_given_names'],
        'recipientSurname': !exists(json, 'recipient_surname') ? undefined : json['recipient_surname'],
        'expiresAt': !exists(json, 'expires_at') ? undefined : (new Date(json['expires_at'])),
    };
}

export function ChannelPropertiesRequestToJSON(value?: ChannelPropertiesRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'account_holder_name': value.accountHolderName,
        'account_number': value.accountNumber,
        'account_type': PayoutChannelV2AccountTypeToJSON(value.accountType),
        'recipient_given_names': value.recipientGivenNames,
        'recipient_surname': value.recipientSurname,
        'expires_at': value.expiresAt === undefined ? undefined : (value.expiresAt.toISOString()),
    };
}

