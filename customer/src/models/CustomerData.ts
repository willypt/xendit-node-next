/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { IndividualDetails } from './IndividualDetails';
import {
    IndividualDetailsFromJSON,
    IndividualDetailsFromJSONTyped,
    IndividualDetailsToJSON,
} from './IndividualDetails';

/**
 * 
 * @export
 * @interface CustomerData
 */
export interface CustomerData {
    /**
     * 
     * @type {string}
     * @memberof CustomerData
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerData
     */
    referenceId?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerData
     */
    type?: string;
    /**
     * 
     * @type {IndividualDetails}
     * @memberof CustomerData
     */
    individualDetails?: IndividualDetails;
    /**
     * 
     * @type {string}
     * @memberof CustomerData
     */
    businessDetails?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerData
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerData
     */
    mobileNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerData
     */
    phoneNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerData
     */
    hashedPhoneNumber?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof CustomerData
     */
    addresses?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof CustomerData
     */
    identityAccounts?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof CustomerData
     */
    kycDocuments?: Array<object>;
    /**
     * 
     * @type {string}
     * @memberof CustomerData
     */
    description?: string;
    /**
     * 
     * @type {object}
     * @memberof CustomerData
     */
    metadata?: object;
    /**
     * 
     * @type {string}
     * @memberof CustomerData
     */
    created?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomerData
     */
    updated?: string;
}

/**
 * Check if a given object implements the CustomerData interface.
 */
export function instanceOfCustomerData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerDataFromJSON(json: any): CustomerData {
    return CustomerDataFromJSONTyped(json, false);
}

export function CustomerDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'referenceId': !exists(json, 'reference_id') ? undefined : json['reference_id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'individualDetails': !exists(json, 'individual_details') ? undefined : IndividualDetailsFromJSON(json['individual_details']),
        'businessDetails': !exists(json, 'business_details') ? undefined : json['business_details'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'mobileNumber': !exists(json, 'mobile_number') ? undefined : json['mobile_number'],
        'phoneNumber': !exists(json, 'phone_number') ? undefined : json['phone_number'],
        'hashedPhoneNumber': !exists(json, 'hashed_phone_number') ? undefined : json['hashed_phone_number'],
        'addresses': !exists(json, 'addresses') ? undefined : json['addresses'],
        'identityAccounts': !exists(json, 'identity_accounts') ? undefined : json['identity_accounts'],
        'kycDocuments': !exists(json, 'kyc_documents') ? undefined : json['kyc_documents'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'created': !exists(json, 'created') ? undefined : json['created'],
        'updated': !exists(json, 'updated') ? undefined : json['updated'],
    };
}

export function CustomerDataToJSON(value?: CustomerData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'reference_id': value.referenceId,
        'type': value.type,
        'individual_details': IndividualDetailsToJSON(value.individualDetails),
        'business_details': value.businessDetails,
        'email': value.email,
        'mobile_number': value.mobileNumber,
        'phone_number': value.phoneNumber,
        'hashed_phone_number': value.hashedPhoneNumber,
        'addresses': value.addresses,
        'identity_accounts': value.identityAccounts,
        'kyc_documents': value.kycDocuments,
        'description': value.description,
        'metadata': value.metadata,
        'created': value.created,
        'updated': value.updated,
    };
}

