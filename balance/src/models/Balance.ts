/* tslint:disable */
/* eslint-disable */
/**
 * NOTE: This file is auto generated by Xendit.
 * Do not edit the class manually.
 * Improvements? Share your ideas at https://github.com/xendit/xendit-node
 */

import { exists, mapValues } from '../../runtime';
import type { BalanceBalance } from './BalanceBalance';
import {
    BalanceBalanceFromJSON,
    BalanceBalanceFromJSONTyped,
    BalanceBalanceToJSON,
} from './BalanceBalance';

/**
 * 
 * @export
 * @interface Balance
 */
export interface Balance {
    /**
     * 
     * @type {string}
     * @memberof Balance
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Balance
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Balance
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Balance
     */
    currency: string;
    /**
     * 
     * @type {string}
     * @memberof Balance
     */
    businessId?: string;
    /**
     * 
     * @type {string}
     * @memberof Balance
     */
    groupId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Balance
     */
    type: string;
    /**
     * 
     * @type {BalanceBalance}
     * @memberof Balance
     */
    balance: BalanceBalance;
}

/**
 * Check if a given object implements the Balance interface.
 */
export function instanceOfBalance(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "currency" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "balance" in value;

    return isInstance;
}

export function BalanceFromJSON(json: any): Balance {
    return BalanceFromJSONTyped(json, false);
}

export function BalanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Balance {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'currency': json['currency'],
        'businessId': !exists(json, 'business_id') ? undefined : json['business_id'],
        'groupId': !exists(json, 'group_id') ? undefined : json['group_id'],
        'type': json['type'],
        'balance': BalanceBalanceFromJSON(json['balance']),
    };
}

export function BalanceToJSON(value?: Balance | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'currency': value.currency,
        'business_id': value.businessId,
        'group_id': value.groupId,
        'type': value.type,
        'balance': BalanceBalanceToJSON(value.balance),
    };
}

